name: Perform a code review when a pull request is created.

on:
  pull_request:
    types: [opened]

# Avoid concurrent runs on the same PR interrupting each other.
concurrency:
  group: codex-pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  codex:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    permissions:
      contents: read
    environment: CODEX
    outputs:
      final_message: ${{ steps.capture_final_message.outputs.final-message }}
    steps:
      - uses: actions/checkout@v5
        with:
          # Explicitly check out the PR's merge commit.
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Pre-fetch base and head refs for the PR
        run: |
          git fetch --no-tags origin \
            ${{ github.event.pull_request.base.ref }} \
            +refs/pull/${{ github.event.pull_request.number }}/head

      # Wrap Codex action with retry to mitigate transient network/stream errors.
      - name: Run Codex (with retry)
        id: run_codex
        uses: Wandalen/wretry.action@v3
        with:
          attempt_limit: 3        # Number of attempts
          attempt_delay: 20000    # Delay between attempts (ms)
          action: hewenyu/codex-action@crs
          with: |
            crs-api-key: ${{ secrets.CRS_API_KEY }}
            crs-base-url: ${{ secrets.CRS_BASE_URL }}
            crs-model: gpt-5-codex
            crs-reasoning-effort: high
            # Save final message to a file so we can reliably collect it even when wrapped.
            output-file: codex_output.md
            prompt: |
              This is PR #${{ github.event.pull_request.number }} for ${{ github.repository }}.
              Base SHA: ${{ github.event.pull_request.base.sha }}
              Head SHA: ${{ github.event.pull_request.head.sha }}

              Review ONLY the changes introduced by the PR.
              Suggest any improvements, potential bugs, or issues.
              Be concise and specific in your feedback.

              Pull request title and body:
              ----
              ${{ github.event.pull_request.title }}
              ${{ github.event.pull_request.body }}

      # Read the saved Codex output and expose it as this job's output.
      - name: Capture Codex output
        id: capture_final_message
        if: success()
        shell: bash
        run: |
          if [ -s codex_output.md ]; then
            echo 'final-message<<__EOF__' >> "$GITHUB_OUTPUT"
            cat codex_output.md >> "$GITHUB_OUTPUT"
            echo '__EOF__' >> "$GITHUB_OUTPUT"
          fi

  post_feedback:
    runs-on: ubuntu-latest
    needs: codex
    if: needs.codex.outputs.final_message != ''
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Report Codex feedback
        uses: actions/github-script@v7
        env:
          CODEX_FINAL_MESSAGE: ${{ needs.codex.outputs.final_message }}
        with:
          github-token: ${{ github.token }}
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: process.env.CODEX_FINAL_MESSAGE,
            });

